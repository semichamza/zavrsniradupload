{
  "_from": "express-swagger-generator",
  "_id": "express-swagger-generator@1.1.10",
  "_inBundle": false,
  "_integrity": "sha512-rgtQ3L/PqjsTnxawUY4eoBIlYYxx8HGrjIcz/S03KYRGpPMyAMSf76zB4rIhSbJZ/jujslzE0jk68qEtvDbSug==",
  "_location": "/express-swagger-generator",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "express-swagger-generator",
    "fetchSpec": "latest",
    "name": "express-swagger-generator",
    "raw": "express-swagger-generator",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/express-swagger-generator/-/express-swagger-generator-1.1.10.tgz",
  "_shasum": "901db13a939dae7b7294a47fc85997099a92ef36",
  "_shrinkwrap": null,
  "_spec": "express-swagger-generator",
  "_where": "/Users/macbook/Documents/zavrsni-mikroservisi-komunikacija/node-sequelize",
  "author": {
    "name": "https://github.com/pgroot/express-swagger-generator/graphs/contributors"
  },
  "bugs": {
    "url": "https://github.com/pgroot/express-swagger-generator/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "doctrine": "^2.0.0",
    "doctrine-file": "^1.0.2",
    "express-swaggerize-ui": "^1.0.2",
    "glob": "^7.0.3",
    "recursive-iterator": "^2.0.3",
    "swagger-parser": "^5.0.5"
  },
  "deprecated": false,
  "description": "Generates swagger doc & ui based on express existing routes.",
  "devDependencies": {
    "body-parser": "^1.15.0",
    "express": "^4.13.4",
    "mocha": "^3.2.0",
    "mocha-jscs": "^5.0.0",
    "mocha-jshint": "^2.3.1",
    "supertest": "^2.0.1"
  },
  "homepage": "https://github.com/pgroot/express-swagger-generator",
  "keywords": [
    "api",
    "express",
    "restful",
    "swagger",
    "swagger-ui"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "express-swagger-generator",
  "optionalDependencies": {},
  "readme": "### Express Swagger Generator\r\n\r\n#### Installation\r\n\r\n```\r\nnpm i express-swagger-generator --save-dev\r\n```\r\n\r\n#### Usage\r\n\r\n```\r\nconst express = require('express');\r\nconst app = express();\r\nconst expressSwagger = require('express-swagger-generator')(app);\r\n\r\nlet options = {\r\n    swaggerDefinition: {\r\n        info: {\r\n            description: 'This is a sample server',\r\n            title: 'Swagger',\r\n            version: '1.0.0',\r\n        },\r\n        host: 'localhost:3000',\r\n        basePath: '/v1',\r\n        produces: [\r\n            \"application/json\",\r\n            \"application/xml\"\r\n        ],\r\n        schemes: ['http', 'https'],\r\n\t\tsecurityDefinitions: {\r\n            JWT: {\r\n                type: 'apiKey',\r\n                in: 'header',\r\n                name: 'Authorization',\r\n                description: \"\",\r\n            }\r\n        }\r\n    },\r\n    basedir: __dirname, //app absolute path\r\n    files: ['./routes/**/*.js'] //Path to the API handle folder\r\n};\r\nexpressSwagger(options)\r\napp.listen(3000);\r\n```\r\n\r\nOpen http://<app_host>:<app_port>/api-docs in your browser to view the documentation.\r\n\r\n#### How to document the API\r\n\r\n```\r\n/**\r\n * This function comment is parsed by doctrine\r\n * @route GET /api\r\n * @group foo - Operations about user\r\n * @param {string} email.query.required - username or email\r\n * @param {string} password.query.required - user's password.\r\n * @returns {object} 200 - An array of user info\r\n * @returns {Error}  default - Unexpected error\r\n */\r\nexports.foo = function() {}\r\n```\r\n\r\nFor model definitions:\r\n\r\n```\r\n/**\r\n * @typedef Product\r\n * @property {integer} id\r\n * @property {string} name.required - Some description for product\r\n * @property {Array.<Point>} Point\r\n */\r\n\r\n/**\r\n * @typedef Point\r\n * @property {integer} x.required\r\n * @property {integer} y.required - Some description for point\r\n * @property {string} color\r\n */\r\n\r\n/**\r\n * @typedef Error\r\n * @property {string} code.required\r\n */\r\n\r\n/**\r\n * @typedef Response\r\n * @property {[integer]} code\r\n */\r\n\r\n\r\n/**\r\n * This function comment is parsed by doctrine\r\n * sdfkjsldfkj\r\n * @route POST /users\r\n * @param {Point.model} point.body.required - the new point\r\n * @group foo - Operations about user\r\n * @param {string} email.query.required - username or email\r\n * @param {string} password.query.required - user's password.\r\n * @operationId retrieveFooInfo\r\n * @produces application/json application/xml\r\n * @consumes application/json application/xml\r\n * @returns {Response.model} 200 - An array of user info\r\n * @returns {Product.model}  default - Unexpected error\r\n * @returns {Array.<Point>} Point - Some description for point\r\n * @headers {integer} 200.X-Rate-Limit - calls per hour allowed by the user\r\n * @headers {string} 200.X-Expires-After - \tdate in UTC when token expires\r\n * @security JWT\r\n */\r\n```\r\n\r\n#### More\r\n\r\nThis module is based on [express-swaggerize-ui](https://github.com/pgroot/express-swaggerize-ui) and [Doctrine-File](https://github.com/researchgate/doctrine-file)",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pgroot/express-swagger-generator.git"
  },
  "scripts": {},
  "version": "1.1.10"
}
